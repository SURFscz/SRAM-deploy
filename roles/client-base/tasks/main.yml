---
- name: Ensure that packages are installed
  apt:
    name:
      - composer
      - apache2
      - libapache2-mod-php
      - php-date
      - php-json
      - php-xml
      - php-mbstring
      - php-curl
      - php-gmp
      - php-sqlite3
      - php-zip
    state: present

- name: Add websites
  template:
    src: "{{ item }}.conf.j2"
    dest: "/etc/apache2/sites-available/{{ item }}.conf"
    mode: 0644
  with_items:
    - idp
  notify: restart Apache

- name: Enable websites
  file:
    src: "/etc/apache2/sites-available/{{ item }}.conf"
    dest: "/etc/apache2/sites-enabled/00-{{ item }}.conf"
    state: link
  with_items:
    - idp
  notify: restart Apache

- name: Create simplesaml project dir
  file:
    path: "{{ simplesaml_project_dir }}"
    state: directory
    mode: 0755
    owner: www-data
    group: www-data

# todo: add checksum
- name: Download SimpleSamlPHP
  get_url:
    url: "{{ simplesaml_download_url }}/v{{ simplesaml_version }}/\
          simplesamlphp-{{ simplesaml_version }}.tar.gz"
    dest: "{{ simplesaml_project_dir }}/simplesamlphp-{{ simplesaml_version }}.tar.gz"
  register: ssp_download

- name: Check SimpleSamlPHP dest dir
  stat: "path={{ simplesaml_project_dir }}/simplesamlphp-{{ simplesaml_version }}"
  register: ssp_destdir

- name: Unpack SimpleSamlPHP
  unarchive:
    src: "{{ simplesaml_project_dir }}/simplesamlphp-{{ simplesaml_version }}.tar.gz"
    dest: "{{ simplesaml_project_dir }}"
    remote_src: true
  when: ssp_download.changed or not ssp_destdir.stat.exists

- name: Link simplesaml
  file:
    src: "{{ simplesaml_project_dir }}/simplesamlphp-{{ simplesaml_version }}"
    dest: "{{ simplesaml_project_dir }}/simplesaml"
    state: link

- name: SimpleSaml permissions
  file:
    path: "{{item}}"
    group: "www-data"
    mode: 0775
  with_items:
    - "{{simplesaml_project_dir}}/simplesaml/log"

- name: Install composer lock file
  copy:
    src: "composer.lock"
    dest: "{{ simplesaml_project_dir }}/simplesaml"

- name: Install OIDC modules
  composer:
    working_dir: "{{ simplesaml_project_dir }}/simplesaml"
    command: install
    optimize_autoloader: False

- name: SimpleSaml configuration
  template:
    src: config.php.j2
    dest: "{{ simplesaml_project_dir }}/simplesaml/config/config.php"

- name: SimpleSaml main authsources
  template:
    src: "authsources.php.j2"
    dest: "{{ simplesaml_project_dir }}/simplesaml/config/authsources.php"

- name: SimpleSaml authsources include dir
  file:
    dest: "{{ simplesaml_authsources_dir }}"
    state: "directory"
    mode: "0755"

- name: SimpleSaml test authsources
  template:
    src: authsources-base.inc.j2
    dest: "{{ simplesaml_authsources_dir }}/00-base.inc"

- name: SimpleSaml enable authcrypt
  file:
    dest: "{{ simplesaml_project_dir }}/simplesaml/modules/authcrypt/enable"
    access_time: preserve
    modification_time: preserve
    state: touch

- name: SimpleSaml main idp metadata
  template:
    src: "saml20-idp-hosted.php.j2"
    dest: "{{ simplesaml_project_dir }}/simplesaml/metadata/saml20-idp-hosted.php"

- name: SimpleSaml idp metadata include dir
  file:
    dest: "{{ simplesaml_idpmetadata_dir }}"
    state: "directory"
    mode: "0755"

- name: SimpleSaml {{ environment_string }} metadata
  template:
    src: "idp-base.inc.j2"
    dest: "{{simplesaml_idpmetadata_dir}}/00-base.inc"

# before, we used to generate a certificate dynamically, but that was
# annoying, because then we would need to exchange the metadata over https
# in some way, which leads to chicken-and-egg problems.
- name: Copy self-signed Token signing cert key
  copy:
    content: "{{client_saml_cert.priv}}"
    dest: "{{ simplesaml_project_dir }}/simplesaml/cert/server.pem"
    group: "www-data"
    mode: "0640"
  no_log: "{{sram_ansible_nolog}}"

- name: Copy self-signed Token signing cert
  copy:
    content: "{{client_saml_cert.pub}}"
    dest: "{{ simplesaml_project_dir }}/simplesaml/cert/server.crt"

