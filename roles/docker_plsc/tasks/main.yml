---
# - name: Ensure that packages are installed
#   apt:
#     state: present
#     name:
#       - libldap2-dev
#       - libsasl2-dev
#     install_recommends: no

#TODO: draai plsc als aparte gebruiker, niet als root.
# - name: Copy plsc service files
#   template:
#     src: "{{item}}.j2"
#     dest: "/etc/systemd/system/{{item}}"
#   with_items:
#     - "plsc.service"
#     - "plsc.timer"
#   notify:
#     - "enable plsc job"

- name: Make sure clients sync directory exists
  file:
    path: "{{ plsc_dir }}"
    state: directory
    mode: 0755

# - name: fetch plsc from {{ plsc_repo_url }}, version {{ plsc_version }}
#   git:
#     repo: "{{ plsc_repo_url }}"
#     dest: "{{ plsc_dir }}"
#     version: "{{ plsc_version }}"
#     accept_hostkey: "yes"
#     force: "yes"

- name: "Create plsc.yml source if it doesn't exist"
  template:
    src: "plsc.yml.j2"
    dest: "{{ plsc_dir }}/plsc.yml"
    mode: "0640"
  no_log: "{{sram_ansible_nolog}}"
  notify: "Restart the plsc container"

# - name: "Copy plsc_monitor script"
#   copy:
#     src: "plscmonitor.py"
#     dest: "{{ plsc_dir }}/plscmonitor.py"
#     mode: "0755"

# - name: Copy zabbix agent plsc_monitor key
#   copy:
#     src: sram-plscmonitor.conf
#     dest: "/etc/zabbix/zabbix_agent2.d/sram-plscmonitor.conf"
#   notify: "restart zabbix-agent"

# - name: Create python3 virtualenv
#   import_role:
#     name: "python-venv"
#   vars:
#     python_venv_dir: "{{ plsc_venv_dir }}"
#     python_venv_requirements: "{{ plsc_dir }}/requirements.txt"

- name: Create the plsc container
  docker_container:
    name: "{{ containers.plsc }}"
    image: "{{ images.plsc }}"
    restart_policy: "always"
    state: started
    # pull: true
    # volumes:
    #   - "{{ plsc_dir }}:{{ plsc_dir }}"
    mounts:
      - type: bind
        source: "{{ plsc_dir }}/plsc.yml"
        target: "/opt/plsc/plsc.yml"
    networks:
      - name: "{{internal_network}}"
