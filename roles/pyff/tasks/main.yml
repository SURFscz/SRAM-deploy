---
- name: Ensure that packages are installed
  apt:
    name:
      - git
      - xmlsec1
    state: present

- name: remove obsolete pyFF user
  user:
    name: "pyff"
    state: absent

- name: create pyFF group
  group:
    name: "{{pyff_group}}"
    system: true
    state: present

- name: Create project directories
  file:
    path: "{{item.path}}"
    state: directory
    mode: "{{item.mode}}"
    owner: "root"
    group: "{{item.group}}"
  with_items:
    - { path: "{{pyff_project_dir}}",  group: "root",           mode: "0755" }
    - { path: "{{pyff_metadata_dir}}", group: "{{pyff_group}}", mode: "0775" }
    - { path: "{{pyff_cert_dir}}",     group: "{{pyff_group}}", mode: "0755" }

# requirements.txt can be generated from virtualenv/bin/pip freeze
- name: Generate requirements.txt.j2 from template
  template:
    src: "requirements.txt.j2"
    dest: "{{ pyff_project_dir }}/requirements.txt"

- name: Create python3 virtualenv
  import_role:
    name: "python-venv"
  vars:
    python_venv_dir: "{{ pyff_env_dir }}"
    python_venv_requirements: "{{ pyff_project_dir }}/requirements.txt"
  notify: "pyff changed"

- name: create self-signed Metadata Signing SSL certs
  shell:
    cmd: >
      openssl genrsa -out "{{pyff_cert_dir}}/signing.key" 2048;
      openssl req -new -nodes -x509 -subj "/C=NL/CN=signing"
      -days 3650 -key "{{pyff_cert_dir}}/signing.key"
      -out "{{pyff_cert_dir}}/signing.crt" -extensions v3_ca
    creates: "{{pyff_cert_dir}}/signing.crt"
  notify: "pyff changed"
  when: "metadata_signing_cert is not defined"

- name: write fixed Metadata signing certificates
  copy:
    dest: "{{pyff_cert_dir}}/{{ item.file }}"
    content: "{{item.contents}}"
    owner: "root"
    group: "{{pyff_group}}"
    mode: "{{item.mode}}"
  with_items:
    - { file: "signing.key", mode: "0640", contents: "{{metadata_signing_cert.priv}}" }
    - { file: "signing.crt", mode: "0644", contents: "{{metadata_signing_cert.pub}}"  }
  notify: "pyff changed"
  when: "metadata_signing_cert is defined"

- name: check signing cert permissions
  file:
    path: "{{pyff_cert_dir}}/{{item.path}}"
    owner: "root"
    group: "{{pyff_group}}"
    mode: "{{item.mode}}"
  with_items:
    - { path: "signing.crt", mode: "0644" }
    - { path: "signing.key", mode: "0640" }


- name: set vars so they are available outside tasks
  set_fact:
    pyff_env_dir: "{{pyff_env_dir}}"
