---
- name: install PyFF
  import_role:
    name: "pyff"
  vars:
    pyff_project_dir: "{{metadata_basedir}}"
    pyff_metadata_dir: "{{metadata_target_dir}}"
    pyff_group: "{{metadata_group}}"

- name: Write source metadata certificates
  template:
    src: "feed.xrd.j2"
    dest: "{{item.filename}}"
  loop:
    - filename: "{{metadata_idps_xrd}}"
      source: "{{metadata_idps_source}}"
      cert: "{{metadata_idps_cert}}"
    - filename: "{{metadata_edugain_xrd}}"
      source: "{{metadata_edugain_source}}"
      cert: "{{metadata_edugain_cert}}"
  notify: "run pyff-metadata job"

- name: Create metadata source directory
  file:
    path: "{{ metadata_idps_source_dir }}"
    state: "directory"
    mode: "0755"
    owner: "root"
    group: "{{metadata_group}}"

- name: install IdP metadata
  copy:
    content: "{{item.metadata}}"
    dest: "{{ metadata_idps_source_dir }}/{{item.name}}.xml"
    mode: "0644"
    owner: "root"
  with_items: "{{ metadata_idps_files }}"
  notify:
    - "run pyff-metadata job"

- name: Remove old files
  file:
    path: "{{item}}"
    state: "absent"
  with_items:
    - "{{ pyff_env_dir }}/idp_feed.fd"

- name: Create pyFF mdq configuration
  template:
    src: "{{item.path}}.j2"
    dest: "{{metadata_basedir}}/{{item.path}}"
    owner: "root"
    group: "root"
    mode: "{{item.mode}}"
  with_items:
    - { path: "idps_feed.fd",           mode: "0644" }
    - { path: "frontend_feed.fd",       mode: "0644" }
    - { path: "backend_feed.fd",        mode: "0644" }
    - { path: "edugain_feed.fd",        mode: "0644" }
    - { path: "feeds.sh",               mode: "0755" }
    - { path: "transform.xslt",         mode: "0644" }
    - { path: "transform_proxy.xslt",   mode: "0644" }
    - { path: "transform_edugain.xslt", mode: "0644" }
  notify: "run pyff-metadata job"

- name: Create pyFF systemd job timer
  template:
    src: "{{item}}.j2"
    dest: "/etc/systemd/system/{{item}}"
  with_items:
    - "pyff-metadata.service"
    - "pyff-metadata.timer"
  notify:
    - "enable pyff-metadata job"
    - "run pyff-metadata job"

- name: check if an obsolete directory is present
  stat:
    path: "/opt/pyff/pyff-env/idps_feed.fd"
  register: "old_dir"
  changed_when: false

- name: remove old directory
  file:
    path: "/opt/pyff"
    state: "absent"
  when: "old_dir.stat.exists"

