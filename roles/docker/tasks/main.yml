---
- name: "Install required packages"
  apt:
    state: "latest"
    name:
      - python3-pymysql
    install_recommends: false

- name: Install docker
  block:
    - name: Add Docker GPG key.
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/debian/gpg"
        state: present

    - name: Add Docker repository.
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian bullseye stable
        state: present

    - name: Install docker config
      ansible.builtin.copy:
        content: |
          {
            "log-driver": "journald",
            "log-opts": {
            }
          }
        dest: "/etc/docker/daemon.json"
        owner: root
        group: root
        mode: 0644

    - name: Install docker
      ansible.builtin.apt:
        name: docker-ce
        state: present
      notify:
        - "start docker"

    - name: Add ansible user to docker group
      ansible.builtin.user:
        name: ansible
        groups: docker
        append: true
  when: environment_name=='vm'

- name: Create the internal network
  community.docker.docker_network:
    name: "{{internal_network}}"

- name: Install Traefik
  block:
    - name: Create the traefik configuration file directory
      ansible.builtin.file:
        state: directory
        path: "/opt/openconext/traefik/{{ item }}"
        owner: root
        mode: "0755"
      with_items:
        - config
        - certs

    - name: Copy the (dynamic) configuration
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/opt/openconext/traefik/config/{{ item }}"
        owner: root
        mode: "0640"
      with_items:
        - traefik.yml

    - name: Create wildcard backend key
      copy:
        content: "{{wildcard_backend_cert.priv}}"
        dest: "/opt/openconext/traefik/certs/backend.key"
        owner: "root"
        group: "ssl-cert"
        mode: "0640"
      no_log: "{{sram_ansible_nolog}}"

    - name: Create wildcard backend cert
      copy:
        content: "{{wildcard_backend_cert.pub}}"
        dest: "/opt/openconext/traefik/certs/backend.crt"
        owner: "root"
        group: "root"
        mode: 0644

    - name: Create the Traefik gateway network
      community.docker.docker_network:
        name: "{{traefik_network}}"

    - name: Create the Traefik gateway
      community.docker.docker_container:
        name: traefik
        image: traefik:latest
        published_ports:
          - "0.0.0.0:443:443"
        pull: true
        restart_policy: "always"
        networks:
          - name: "{{traefik_network}}"
        command: "--configFile=/config/config/traefik.yml"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /opt/openconext/traefik/:/config/
        comparisons:
          published_ports: strict
          networks: strict
  when: environment_name=='vm'

