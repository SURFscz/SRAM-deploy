---

- name: "Install packages"
  ansible.builtin.apt:
    name:
      - "docker-ce"
      - "docker-ce-cli"
      - "docker-compose"
      - "docker-compose-plugin"
      - "ansible"
      - "apache2"

- name: "Fix cgroup v1 for docker"
  ansible.builtin.lineinfile:
    path: "/etc/default/grub"
    line: >
      GRUB_CMDLINE_LINUX="systemd.legacy_systemd_cgroup_controller=yes
      systemd.unified_cgroup_hierarchy=0"'
    regexp: '^GRUB_CMDLINE_LINUX='
    state: "present"

# TODO:
# - add apache (of nog liever: nginx)
- name: Enable Apache modules
  community.general.apache2_module:
    state: present
    name: "{{ item }}"
  with_items:
    - "ssl"
    - "proxy"
    - "proxy_http"
  notify: "restart apache"

- name: Create Apache ci-runner config
  ansible.builtin.template:
    src: "ci-runner.conf.j2"
    dest: "/etc/apache2/sites-available/ci-runner.conf"
    mode: "0644"
  notify: "restart apache"

- name: Link ci-runner config to sites-enabled
  ansible.builtin.file:
    src: "/etc/apache2/sites-available/ci-runner.conf"
    dest: "/etc/apache2/sites-enabled/ci-runner.conf"
    state: "link"
  notify: "restart apache"

- name: Write ci-runner private key
  copy:
    content: "{{cirunner_cert.key}}"
    dest: "{{ ssl_certs_dir }}/ci-runner.sram.surf.nl.key"
    owner: "root"
    group: "ssl-cert"
    mode: "0640"
  no_log: "{{sram_ansible_nolog}}"
  notify: "restart apache"

- name: Write ci-runner certificate
  copy:
    content: "{{cirunner_cert.cert}}"
    dest: "{{ ssl_certs_dir }}/ci-runner.sram.surf.nl.crt"
    owner: "root"
    group: "root"
    mode: "0644"
  notify: "restart apache"

- name: Write ci-runner chain
  copy:
    content: "{{cirunner_cert.chain}}"
    dest: "{{ ssl_certs_dir }}/ci-runner.sram.surf.nl.chain.crt"
    owner: "root"
    group: "root"
    mode: "0644"
  notify: "restart apache"

# - add user for ci-runner (draait nu nog als martin)
- name: Add ci-runner group
  ansible.builtin.group:
    name: "runner"

- name: Add ci-runner user
  ansible.builtin.user:
    name: "runner"
    group: "runner"
    groups: "docker"
    shell: "/usr/sbin/nologin"
    system: true


# https://github.com/MonolithProjects/ansible-github_actions_runner
# ansible-galaxy role install -r requirements.yml
#
# This role needs github_access_token with repo scope in vault
- include_role:
    name: "monolithprojects.github_actions_runner"
  vars:
    runner_user: runner
    github_account: "{{ cirunner_github_org }}"
    github_repo: "{{ cirunner_github_repo }}"
    access_token: "{{ github_access_token}}"
