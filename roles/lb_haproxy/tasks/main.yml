# install a haproxy on the load balancer
---

##########################################
## handle generation of dh params
##
- name: install openssl
  apt:
    name: openssl
    state: present
  when: enable_https and haproxy.custom_dhparam

- name: generate Diffie-Hellman group
  command: openssl dhparam -out {{ haproxy.dhparam_file }} {{ haproxy.dhparam_keysize }}
  args:
    creates: "{{ haproxy.dhparam_file }}"
  notify:
    - "restart haproxy"
  when: enable_https and haproxy.custom_dhparam


##########################################
## install haproxy
##
- name: install haproxy
  apt:
    name:
      - haproxy
      - socat
      - fping
    state: present

- name: install haproxy config
  template:
    src: "haproxy.cfg.j2"
    dest: "/etc/haproxy/haproxy.cfg"
    mode: "0640"
    owner: "root"
    group: "haproxy"
  no_log: "{{sram_ansible_nolog}}"
  notify:
    - "restart haproxy"

- name: install haproxy certificate list
  template:
    src: "crt-list.txt.j2"
    dest: "/etc/haproxy/crt-list.txt"
    mode: "0644"
    owner: "root"
    group: "root"
  notify:
    - "restart haproxy"
  when: "enable_https"

- block:
    - name: Create bin directory
      file:
        path: "{{haproxy_oscp_bin_dir}}"
        state: "directory"

    - name: Copy ocsp script
      copy:
        src: ocsp.sh
        dest: "{{haproxy_oscp_bin_dir}}"
        mode: 0755
      notify:
        - "run ocsp update"

    - name: Copy ocsp service files
      template:
        src: "{{item}}.j2"
        dest: "/etc/systemd/system/{{item}}"
      with_items:
        - "ocsp.service"
        - "ocsp.timer"
      notify:
        - "systemd daemon-reload"
        - "enable ocsp job"
        - "run ocsp update"

    - name: Copy ocsp service files for certbot/letsencrypt
      template:
        src: "ocsp-letsencrypt.j2"
        dest: "/etc/letsencrypt/renewal-hooks/post/"
        mode: '0755'
  when: "enable_https and not is_docker"

- name: create override dir
  file:
    path: "/etc/systemd/system/haproxy.service.d/"
    state: "directory"

- name: bindmount journald syslog socket in chroot
  copy:
    src: "haproxy-log-bindmount.conf"
    dest: "/etc/systemd/system/haproxy.service.d/"
  notify:
    - "systemd daemon-reload"
    - "restart haproxy"

- name: install LDAP (un)fencing scripts
  template:
    src: "{{ item }}.j2"
    dest: "/opt/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - fence.sh
    - unfence.sh
  notify:
    - "restart fence"

- name: Copying fence service script
  become: true
  copy:
    src: "fence.service"
    dest: "/etc/systemd/system/fence.service"
  notify:
    - "systemd daemon-reload"
    - "restart fence"

