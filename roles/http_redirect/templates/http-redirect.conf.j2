server {
    listen      80 default_server;
    listen [::]:80 default_server;

    server_name _;

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "sameorigin"  always;
    add_header Referrer-Policy "strict-origin-when-cross-origin"  always;
    add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; frame-src 'none'; form-action 'self' https://*.{{base_domain}}; frame-ancestors 'none'; block-all-mixed-content;"  always;
    add_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), cross-origin-isolated=(), display-capture=(), document-domain=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=(), clipboard-read=(), clipboard-write=(), gamepad=(), speaker-selection=()"  always;

    return 403;
}

{% for h in http_hosts %}
server {
    listen      80;
    listen [::]:80;

    server_name {{ h }};

    add_header X-Content-Type-Options "nosniff"  always;
    add_header X-Frame-Options "sameorigin"  always;
    add_header Referrer-Policy "strict-origin-when-cross-origin"  always;
    add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; frame-src 'none'; form-action 'self' https://*.{{base_domain}}; frame-ancestors 'none'; block-all-mixed-content;"  always;
    add_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), cross-origin-isolated=(), display-capture=(), document-domain=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=(), clipboard-read=(), clipboard-write=(), gamepad=(), speaker-selection=()"  always;

{% if letsencrypt_challenge_dir is defined %}
    location /.well-known/acme-challenge {
        alias {{letsencrypt_challenge_dir}}/.well-known/acme-challenge;
    }
{% endif %}

    location / {
        rewrite ^(.*) https://{{ h }}$1 permanent;
    }
}
{% endfor %}
