---
- name: "install required packages"
  apt:
    name:
      - "mariadb-server"
      - "php-fpm"
#      - "openssl"
    state: "present"

# for some weird reason, mariadb depends on rsync....
- name: "disable rsync"
  systemd:
    name: "rsync.service"
    masked: true

- name: "install required python packages"
  apt:
    name:
      - "python3-pip"
      - "python3-setuptools"
      - "python3-wheel"
      - "python3-pymysql"
    install_recommends: false
    state: "present"

- name: "Install python-zabbixapi"
  pip:
    name: "zabbix-api"

- name: "create groups for zabbix"
  group:
    name: "{{item}}"
    state: present
  with_items:
    - "{{zabbix_php_fpm_conf_group}}"
    - "{{zabbix_web_conf_web_group}}"

- name: "create users for zabbix"
  user:
    name: "{{item}}"
    state: "present"
    shell: "/usr/sbin/nologin"
    system: true
  with_items:
    - "{{zabbix_php_fpm_conf_user}}"
    - "{{zabbix_web_conf_web_user}}"

- name: "install zabbix TLS key"
  copy:
    content: "{{zabbix_cert.priv}}"
    dest: "{{zabbix_web_tls_key}}"
    owner: "root"
    group: "ssl-cert"
    mode: "0640"

- name: "install zabbix TLS certificate"
  copy:
    content: "{{zabbix_cert.pub}}"
    dest: "{{zabbix_web_tls_crt}}"
    owner: "root"
    group: "ssl-cert"
    mode: "0644"

- include_role:
    name: "community.zabbix.zabbix_server"

- include_role:
    name: "nginx"

- include_role:
    name: "community.zabbix.zabbix_web"

- name: "increase zabbix cache size"
  lineinfile:
    path: "/etc/zabbix/zabbix_server.conf.d/99-zabbix-sram.conf"
    create: true
    line: "CacheSize=64M"

# workaround for https://github.com/ansible-collections/community.zabbix/pull/1227
- name: "fix nginx access to fpm socket"
  lineinfile:
    path: "/etc/php/7.4/fpm/pool.d/zabbix.conf"
    regexp: "^listen.mode ?="
    line: "listen.mode = 0660"
  notify: "restart php-fpm-version"

- meta: "flush_handlers"


- name: zabbix
  vars:
    ansible_network_os: "community.zabbix.zabbix"
    ansible_connection: "httpapi"
    ansible_httpapi_port: 443
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: "{{zabbix_validate_certs}}"
    ansible_host: "{{zabbix_url}}"
    ansible_zabbix_url_path: '/'
    ansible_user: "Admin"
    ansible_httpapi_pass: "{{zabbix_admin_password}}"
  become: false
  block:
  # check if we can login with the default password
  # if so, then we need to update the Admin user below
    - name: "check if zabbix admin user has been configured"
      community.zabbix.zabbix_user_info:
        username: "Admin"
      register: "can_login"
      become: false

    - name: "set zabbix admin groups"
      community.zabbix.zabbix_user:
        username: "Admin"
        name: "Admin"
        surname: "Administein"
        passwd: "{{zabbix_admin_password}}"
        current_passwd: "{{zabbix_admin_password}}"
        usrgrps:
          - "Zabbix administrators"
        state: "present"
      when: "'zabbix_user' in can_login"

    # create user for client registration
    - name: "Create user group for API access"
      community.zabbix.zabbix_usergroup:
        name: "Host registration"
        gui_access: "disable"
      become: false

    - name: Create Zabbix role
      community.zabbix.zabbix_user_role:
        name: "Host registration"
        state: "present"
        type: "Super Admin"
        rules:
          ui.default_access: 0
          ui:
            - { name: "inventory.overview", status: 1 }
          api.access: 1
          api.mode: 1
          api:
            - "host.get"
            - "host.update"
            - "host.create"
            - "host.delete"
            - "hostgroup.get"
            - "hostgroup.update"
            - "hostgroup.create"
            - "hostinterface.get"
            - "hostinterface.update"
            - "template.get"

    - name: "Create user for API access"
      community.zabbix.zabbix_user:
        username: "{{zabbix_api_user}}"
        passwd: "{{zabbix_api_password}}"
        role_name: "Host registration"
        usrgrps: ["Host registration"]
        state: "present"

  # end of block


- name: Install zabbix backup script
  template:
    src: "backup.j2"
    dest: "/opt/backups/run.d/sram-zabbix-server.sh"
    mode: "0700"
