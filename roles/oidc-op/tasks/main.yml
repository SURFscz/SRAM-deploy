---
- name: fetch oidc-op from {{ oidc_op_repo_url }}, version {{ oidc_op_repo_version }}
  git:
    repo: "{{ oidc_op_repo_url }}"
    dest: "{{ oidc_dir }}"
    version: "{{ oidc_op_repo_version }}"
    force: yes
  notify: "restart oidc-op"
  changed_when: false

- name: Copy requirements files
  copy:
    dest: "{{ oidc_dir }}/sram-req.txt"
    content: |
      Flask
      /opt/oidc-op

- name: Create python3 virtualenv
  import_role:
    name: "python-venv"
  vars:
    python_venv_dir: "{{ oidc_dir_venv }}"
    python_venv_requirements: "{{ oidc_dir }}/sram-req.txt"
  notify: "restart oidc-op"

- name: Make server executable
  file:
    dest: "{{ oidc_dir }}/example/flask_op/server.py"
    mode: 'a+x'

- name: Copy sram template
  copy:
    src: "sram_user_pass.jinja2"
    dest: "{{oidc_dir }}/example/flask_op/templates/sram_user_pass.jinja2"
    mode: 0644

- name: Copy static script
  copy:
    src: "script.js"
    dest: "{{oidc_dir }}/example/flask_op/static/script.js"
    mode: 0644

- name: Copy users and passwd files
  template:
    src: "{{ item }}.j2"
    dest: "{{oidc_dir }}/example/flask_op/{{ item }}"
    mode: 0644
  with_items:
    - sram_users.json
    - sram_passwd.json
    - config_op.json
  notify: "restart oidc-op"

- name: Create group oidc-op
  ansible.builtin.group:
    name: oidc-op

- name: Create user oidc-op
  ansible.builtin.user:
    name: oidc-op
    group: oidc-op
    groups:
      - ssl-cert
    shell: /bin/bash

- name: Make sure cdb directory exists
  file:
    path: "{{ oidc_dir }}/example/flask_op/cdb"
    state: directory
    owner: oidc-op
    group: oidc-op
    mode: 0755

- name: Create client config if it doesn't exist
  template:
    src: "client_id.j2"
    dest: "{{ oidc_dir }}/example/flask_op/cdb/{{ sbs_client_id }}"
    mode: 0640
    owner: oidc-op
    group: oidc-op
  no_log: "{{sram_ansible_nolog}}"
  notify: "restart oidc-op"

- name: Chown oidc-op static/jwks.json
  ansible.builtin.file:
    path: "{{ oidc_dir }}/example/flask_op/static/jwks.json"
    owner: oidc-op
    group: oidc-op
    mode: 0644
  # This file is checked out as root but needs to be
  # writable by oidc-op
  changed_when: false

- name: Chown oidc-op private/cookie_jwks.json
  ansible.builtin.file:
    path: "{{ oidc_dir }}/example/flask_op/private/cookie_jwks.json"
    owner: oidc-op
    group: oidc-op
    mode: 0644
  # This file is checked out as root but needs to be
  # writable by oidc-op
  changed_when: false

- name: Create and chown oidc-op debug.log
  ansible.builtin.file:
    path: "{{ oidc_dir }}/example/flask_op/debug.log"
    state: touch
    owner: oidc-op
    group: oidc-op
    modification_time: preserve
    access_time: preserve
    mode: 0644

- name: Create oidc-op systemd service
  template:
    src: "oidc-op.service.j2"
    dest: "/etc/systemd/system/oidc-op.service"
  register: oidc_op_systemd

- name: enable oidc-op
  systemd:
    name: 'oidc-op'
    state: started
    daemon_reload: yes
    enabled: yes
