logging:
  version: 1
  root:
    handlers:
      - default
      - console
    level: DEBUG
  loggers:
    bobcat_idp:
      level: DEBUG
  handlers:
    default:
      class: logging.FileHandler
      filename: 'debug.log'
      formatter: default
    console:
      class: logging.StreamHandler
      stream: 'ext://sys.stdout'
      formatter: default
  formatters:
    default:
      format: '%(asctime)s %(name)s %(levelname)s %(message)s'

port: &port {{ oidc_op_port }}
domain: {{ hostnames.oidc_op }}
server_name: '{domain}'
base_url: &base_url 'https://{domain}'

key_def: &key_def
  -
    type: RSA
    use:
      - sig
  -
    type: EC
    crv: "P-256"
    use:
      - sig

op:
  server_info:
    client_db:
      class: oidcmsg.storage.abfile.AbstractFileSystem
      kwargs:
        fdir: cdb
        key_conv: oidcmsg.util.QPKey
        value_conv: oidcmsg.util.JSON
    issuer: *base_url
    httpc_params:
      verify: False
    session_key:
      filename: private/session_jwk.json
      type: OCT
      use: sig
    capabilities:
      subject_types_supported:
        - public
        - pairwise
      grant_types_supported:
        - authorization_code
        - implicit
        - urn:ietf:params:oauth:grant-type:jwt-bearer
        - refresh_token
    template_dir: templates
    token_handler_args:
      jwks_def:
        private_path: 'private/token_jwks.json'
        read_only: False
        key_defs:
          -
            type: oct
            bytes: 24
            use:
              - enc
            kid: code
          -
            type: oct
            bytes: 24
            use:
              - enc
            kid: refresh
      code:
        kwargs:
          lifetime: 600
      id_token:
        class: oidcop.token.id_token.IDToken
        kwargs:
          base_claims:
            email:
              essential: True
            email_verified:
              essential: True
      token:
        class: oidcop.token.jwt_token.JWTToken
        kwargs:
          lifetime: 3600
          add_claims:
            - email
            - email_verified
            - phone_number
            - phone_number_verified
          add_claim_by_scope: True
          aud:
            - https://example.org/appl
      refresh:
        kwargs:
          lifetime: 86400
    keys:
      private_path: "private/jwks.json"
      key_defs: *key_def
      public_path: 'static/jwks.json'
      read_only: False
      # otherwise OP metadata will have jwks_uri: https://127.0.0.1:5000/None!
      uri_path: 'static/jwks.json'
    endpoint:
      webfinger:
        path: '.well-known/webfinger'
        class: oidcop.oidc.discovery.Discovery
        kwargs:
          client_authn_method: null
      provider_info:
        path: ".well-known/openid-configuration"
        class: oidcop.oidc.provider_config.ProviderConfiguration
        kwargs:
          client_authn_method: null
      registration:
          path: registration
          class: oidcop.oidc.registration.Registration
          kwargs:
            client_authn_method: null
            client_secret_expiration_time: 432000
      registration_api:
          path: registration_api
          class: oidcop.oidc.read_registration.RegistrationRead
          kwargs:
            client_authn_method:
              - bearer_header
      introspection:
          path: introspection
          class: oidcop.oauth2.introspection.Introspection
          kwargs:
            client_authn_method:
              - client_secret_post
            release:
            - username
      authorization:
          path: authorization
          class: oidcop.oidc.authorization.Authorization
          kwargs:
            client_authn_method: null
            claims_parameter_supported: True
            request_parameter_supported: True
            request_uri_parameter_supported: True
            response_types_supported:
              - code
              - token
              - id_token
              - "code token"
              - "code id_token"
              - "id_token token"
              - "code id_token token"
              - none
            response_modes_supported:
              - query
              - fragment
              - form_post
      token:
          path: token
          class: oidcop.oidc.token.Token
          kwargs:
            client_authn_method:
              - client_secret_post
              - client_secret_basic
              - client_secret_jwt
              - private_key_jwt
      userinfo:
          path: userinfo
          class: oidcop.oidc.userinfo.UserInfo
          kwargs:
            claim_types_supported:
              - normal
              - aggregated
              - distributed
      end_session:
          path: session
          class: oidcop.oidc.session.Session
          kwargs:
              logout_verify_url: verify_logout
              post_logout_uri_path: post_logout
              signing_alg: "ES256"
              frontchannel_logout_supported: True
              frontchannel_logout_session_supported: True
              backchannel_logout_supported: True
              backchannel_logout_session_supported: True
              check_session_iframe: 'check_session_iframe'
    userinfo:
      class: oidcop.user_info.UserInfo
      kwargs:
        db_file: sram_users.json
    authentication:
      user:
        acr: urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocolPassword
        class: oidcop.user_authn.user.UserPassJinja2
        kwargs:
          verify_endpoint: 'verify/user'
          template: user_pass.jinja2
          db:
            class: oidcop.util.JSONDictDB
            kwargs:
              filename: sram_passwd.json
          page_header: "Testing log in"
          submit_btn: "Get me in!"
          user_label: "Nickname"
          passwd_label: "Secret sauce"
      mfa:
        acr: https://refeds.org/profile/mfa
        class: oidcop.user_authn.user.UserPassJinja2
        kwargs:
          verify_endpoint: 'verify/user'
          template: user_pass.jinja2
          db:
            class: oidcop.util.JSONDictDB
            kwargs:
              filename: sram_passwd.json
          page_header: "Testing MFA in"
          submit_btn: "Get me in secure!"
          user_label: "Nickname"
          passwd_label: "Secret MFA sauce"
    cookie_handler:
      class: oidcop.cookie_handler.CookieHandler
      kwargs:
        keys:
          private_path: "private/cookie_jwks.json"
          key_defs:
              -
                type: OCT
                kid: enc
                use:
                  - enc
              -
                type: OCT
                kid: sig
                use:
                  - sig
          read_only: false
        name:
          session: "oidc_op"
          register: "oidc_op_rp"
          session_management: "sman"
    login_hint2acrs:
      class: oidcop.login_hint.LoginHint2Acrs
      kwargs:
        scheme_map:
          email:
            - urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocolPassword

    # this adds PKCE support as mandatory - disable it if needed (essential: False)
    add_on:
      pkce:
        function: oidcop.oidc.add_on.pkce.add_pkce_support
        kwargs:
          essential: false
          code_challenge_method:
            #plain
            S256
            S384
            S512

      claims:
        function: oidcop.oidc.add_on.custom_scopes.add_custom_scopes
        kwargs:
          research_and_scholarship:
            - name
            - given_name
            - family_name
            - email
            - email_verified
            - sub
            - iss
            - eduperson_scoped_affiliation
          eduperson_scoped_affiliation:
            - eduperson_scoped_affiliation
          voperson_external_affiliation:
            - voperson_external_affiliation
          ssh_public_key:
            - ssh_public_key
          eduperson_orcid:
            - eduperson_orcid
          uid:
            - uid
          voperson_external_id:
            - voperson_external_id
          eduperson_entitlement:
            - eduperson_entitlement
          eduperon_assurance:
            - eduperon_assurance
          eduperson_principal_name:
            - eduperson_principal_name
          voperson_id:
            - voperson_id

webserver:
  server_cert: '{{ ssl_certs_dir }}/{{ internal_base_domain }}.crt'
  server_key: '{{ ssl_certs_dir }}/{{ internal_base_domain }}.key'
  ca_bundle: null
  verify_user: false
  port: *port
  domain: 0.0.0.0
  debug: true
