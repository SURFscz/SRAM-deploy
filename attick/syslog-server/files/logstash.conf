input {
    beats {
        port => 5044
        client_inactivity_timeout => 600
        ssl => false
    }
}

input {
    udp {
        port => 25826
        buffer_size => 1452
        codec => collectd {
            typesdb => [ '/usr/share/collectd/types.db']
        }
    }
}

filter {
    if [source] == "satosa" {
        json {
            source => "message"
            target => "satosa"
            remove_field => [ "message" ]
        }
        date { #2017-11-27 09:58:55.546381
            match => [ "[satosa][proxy_timestamp]", "YYYY-MM-dd HH:mm:ss" ]
        }
    }
#    if [source] == "comanage" {
#        grok {
#            match => { "message" => "%{DATA:date} %{DATA:time} %{GREEDYDATA:logline}" }
#        }
#        mutate {
#            add_field => { "timestamp" => "%{date} %{time}" }
#            remove_field => [ "date", "time", "message" ]
#        }
#        date { #2017-10-06 13:33:36
#            match => [ "timestamp", "YYYY-MM-dd HH:mm:ss" ]
#        }
#    }
    if [source] == "slapd" {
        grok {
            match => { "message" => "%{SYSLOGLINE}" }
        }
        grok {
            match => { "message" => " conn=(?<conn>\d+) " }
        }
        date {
            match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
    }
    if [source] == "syslog" {
        grok {
            match => { "message" => "%{SYSLOGLINE}" }
        }
        date {
            match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
    }
    if [collectd_type] {
        mutate {
            rename => { "host" => "[host][name]" }
        }
    }
}

output {
    elasticsearch {
        hosts => localhost
        index => "logstash-%{+YYYYMMdd}"
    }
}

#output { stdout { codec => rubydebug } }
